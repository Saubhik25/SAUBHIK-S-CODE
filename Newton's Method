/*

 Problem Statement : solve the given non linear equation using Newton's Method :
x1^3+ x1^2x2 - x1x3 + 6 = 0
e^(x1) + e^(x2) - x3 = 0
x2^2 - 2x1x3 = 4 , 

initial vector = [ -1,-2,-1]^T
error = 10^-6 */ 



#include<stdio.h>
#include<stdlib.h>
#include<math.h>

#define N 3
#define Max_iter 100
#define Tol 1e-6


void Jacobian( double J[N][N],double x[N])
{  J[0][0]=3*x[0]*x[0]+2*x[0]*x[1]-x[3];
   J[0][1]=x[0]*x[0];
   J[0][2]=-x[0];
   
   J[1][0]=exp(x[0]);
   J[1][1]=exp(x[1]);
   J[1][2]=-1;
   
   J[2][0]=-2*x[2];
   J[2][1]=2*x[1];
   J[2][2]=2*x[0];}
   
   
   void function( double f[N],double x[N])
   {  f[0]=-(x[0]*x[0]*x[0]+x[0]*x[0]*x[1]-x[0]*x[2]+6);
      f[1]=-(exp(x[0])+exp(x[1])-x[2]);
      f[2]=-(x[1]*x[1]-2*x[0]*x[2]-4);}
      
      
  void Gauss_Elimination(int n, double a[n][n],double b[n], double x[n])
{  for(int i=0;i<=n-2;i++)
   {  for(int j=i+1;j<=n-1;j++)
      {  double m= a[j][i]/a[i][i];
         for(int k=i;k<=n;k++)
         {  a[j][k]-=m*a[i][k];}
         b[j]-=m*b[i];}}

x[n-1]=b[n-1]/a[n-1][n-1];
for(int i=n-2;i>=0;i--)
{  double sum =0;
   for(int j=i+1;j<=n-1;j++)
   {  sum+= a[i][j]*x[j];}
   x[i]=(b[i]-sum)/a[i][i];}}
       
 int main()
 {  double x[N];
    x[0]=-1;
    x[1]=-2;
    x[2]=-1;
    
    printf("\n Here 'n' denotes n'th iteration and x1,x2,x3 are solution \n\n");
    printf(" 0\t %.6lf \t %.6lf \t %.6lf \n",x[0],x[1],x[2]);
    
    int iter=0;
    
    double J[N][N],f[N],x_error[N];
    double diff =0.0;
    
    do{
    Jacobian(J,x);
    function(f,x);
    Gauss_Elimination(3,J,f,x_error);
    for(int i=0;i<N;i++)
    {  diff+=x_error[i]*x_error[i];}
    for(int i=0;i<N;i++)
    {  x[i]+=x_error[i];}
    iter++;
    printf("\n %d\t %.6lf \t %.6lf \t %.6lf \n",iter,x[0],x[1],x[2]);
    }while(iter<Max_iter && diff>Tol);
    
    printf("\n So the solution after %d iterations is :\n\n %0.6lf \n %0.6lf \n %0.6lf\n",iter,x[0],x[1],x[2]);
    printf("\n All values are correct upto 6 decimal places ");
    return 0;}
    
    
    
    Here 'n' denotes n'th iteration and x1,x2,x3 are solution 

 0	 -1.000000 	 -2.000000 	 -1.000000 

 1	 -1.281969 	 -3.255753 	 0.229536 

 2	 -1.336850 	 -2.192135 	 0.341818 

 3	 -1.415808 	 -1.820178 	 0.395149 

 4	 -1.444490 	 -1.711075 	 0.415439 

 5	 -1.453107 	 -1.676130 	 0.420819 

 6	 -1.455352 	 -1.667026 	 0.422118 

 7	 -1.455887 	 -1.664856 	 0.422411 

 8	 -1.456009 	 -1.664368 	 0.422475 

 9	 -1.456035 	 -1.664261 	 0.422489 

 10	 -1.456041 	 -1.664237 	 0.422493 

 11	 -1.456042 	 -1.664232 	 0.422493 

 12	 -1.456043 	 -1.664231 	 0.422493 

 13	 -1.456043 	 -1.664231 	 0.422493 

 14	 -1.456043 	 -1.664230 	 0.422493 

 15	 -1.456043 	 -1.664230 	 0.422493 

 16	 -1.456043 	 -1.664230 	 0.422493 

 17	 -1.456043 	 -1.664230 	 0.422493 

 18	 -1.456043 	 -1.664230 	 0.422493 

 19	 -1.456043 	 -1.664230 	 0.422493 

 20	 -1.456043 	 -1.664230 	 0.422493 

 21	 -1.456043 	 -1.664230 	 0.422493 

 22	 -1.456043 	 -1.664230 	 0.422493 

 23	 -1.456043 	 -1.664230 	 0.422493 

 24	 -1.456043 	 -1.664230 	 0.422493 

 25	 -1.456043 	 -1.664230 	 0.422493 

 26	 -1.456043 	 -1.664230 	 0.422493 

 27	 -1.456043 	 -1.664230 	 0.422493 

 28	 -1.456043 	 -1.664230 	 0.422493 

 29	 -1.456043 	 -1.664230 	 0.422493 

 30	 -1.456043 	 -1.664230 	 0.422493 

 31	 -1.456043 	 -1.664230 	 0.422493 

 32	 -1.456043 	 -1.664230 	 0.422493 

 33	 -1.456043 	 -1.664230 	 0.422493 

 34	 -1.456043 	 -1.664230 	 0.422493 

 35	 -1.456043 	 -1.664230 	 0.422493 

 36	 -1.456043 	 -1.664230 	 0.422493 

 37	 -1.456043 	 -1.664230 	 0.422493 

 38	 -1.456043 	 -1.664230 	 0.422493 

 39	 -1.456043 	 -1.664230 	 0.422493 

 40	 -1.456043 	 -1.664230 	 0.422493 

 41	 -1.456043 	 -1.664230 	 0.422493 

 42	 -1.456043 	 -1.664230 	 0.422493 

 43	 -1.456043 	 -1.664230 	 0.422493 

 44	 -1.456043 	 -1.664230 	 0.422493 

 45	 -1.456043 	 -1.664230 	 0.422493 

 46	 -1.456043 	 -1.664230 	 0.422493 

 47	 -1.456043 	 -1.664230 	 0.422493 

 48	 -1.456043 	 -1.664230 	 0.422493 

 49	 -1.456043 	 -1.664230 	 0.422493 

 50	 -1.456043 	 -1.664230 	 0.422493 

 51	 -1.456043 	 -1.664230 	 0.422493 

 52	 -1.456043 	 -1.664230 	 0.422493 

 53	 -1.456043 	 -1.664230 	 0.422493 

 54	 -1.456043 	 -1.664230 	 0.422493 

 55	 -1.456043 	 -1.664230 	 0.422493 

 56	 -1.456043 	 -1.664230 	 0.422493 

 57	 -1.456043 	 -1.664230 	 0.422493 

 58	 -1.456043 	 -1.664230 	 0.422493 

 59	 -1.456043 	 -1.664230 	 0.422493 

 60	 -1.456043 	 -1.664230 	 0.422493 

 61	 -1.456043 	 -1.664230 	 0.422493 

 62	 -1.456043 	 -1.664230 	 0.422493 

 63	 -1.456043 	 -1.664230 	 0.422493 

 64	 -1.456043 	 -1.664230 	 0.422493 

 65	 -1.456043 	 -1.664230 	 0.422493 

 66	 -1.456043 	 -1.664230 	 0.422493 

 67	 -1.456043 	 -1.664230 	 0.422493 

 68	 -1.456043 	 -1.664230 	 0.422493 

 69	 -1.456043 	 -1.664230 	 0.422493 

 70	 -1.456043 	 -1.664230 	 0.422493 

 71	 -1.456043 	 -1.664230 	 0.422493 

 72	 -1.456043 	 -1.664230 	 0.422493 

 73	 -1.456043 	 -1.664230 	 0.422493 

 74	 -1.456043 	 -1.664230 	 0.422493 

 75	 -1.456043 	 -1.664230 	 0.422493 

 76	 -1.456043 	 -1.664230 	 0.422493 

 77	 -1.456043 	 -1.664230 	 0.422493 

 78	 -1.456043 	 -1.664230 	 0.422493 

 79	 -1.456043 	 -1.664230 	 0.422493 

 80	 -1.456043 	 -1.664230 	 0.422493 

 81	 -1.456043 	 -1.664230 	 0.422493 

 82	 -1.456043 	 -1.664230 	 0.422493 

 83	 -1.456043 	 -1.664230 	 0.422493 

 84	 -1.456043 	 -1.664230 	 0.422493 

 85	 -1.456043 	 -1.664230 	 0.422493 

 86	 -1.456043 	 -1.664230 	 0.422493 

 87	 -1.456043 	 -1.664230 	 0.422493 

 88	 -1.456043 	 -1.664230 	 0.422493 

 89	 -1.456043 	 -1.664230 	 0.422493 

 90	 -1.456043 	 -1.664230 	 0.422493 

 91	 -1.456043 	 -1.664230 	 0.422493 

 92	 -1.456043 	 -1.664230 	 0.422493 

 93	 -1.456043 	 -1.664230 	 0.422493 

 94	 -1.456043 	 -1.664230 	 0.422493 

 95	 -1.456043 	 -1.664230 	 0.422493 

 96	 -1.456043 	 -1.664230 	 0.422493 

 97	 -1.456043 	 -1.664230 	 0.422493 

 98	 -1.456043 	 -1.664230 	 0.422493 

 99	 -1.456043 	 -1.664230 	 0.422493 

 100	 -1.456043 	 -1.664230 	 0.422493 

 So the solution after 100 iterations is :

 -1.456043 
 -1.664230 
 0.422493

( All values are correct upto 6 decimal places)
