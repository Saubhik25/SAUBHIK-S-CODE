/* 
program: C program to solve the boundary value problem using the finite difference scheme
uxx+uyy=0, 0<x,y<1, u(x,0)=0,u(0,y)=0,u(x,1)=10x,u(1,y)=20y
find the first approximate values at the interior mesh points while taling h=k=0.25 */

#include<stdio.h>
#include<math.h>
#define N 4
#define TOL 1e-4
#define MAX_ITER 1000
int main()
{
  double u[N+1][N+1];
  for(int i=0;i<=N;i++)
  {
    u[i][0]=0.0;
    u[0][i]=0.0;
    u[i][N]=10*(i*0.25);
    u[N][i]=1
    0*(i*0.25);
  }
  for(int i=1;i<N;i++)
  { 
    for(int j=1;j<N;j++)
    {
      u[i][j]=0.0;
    }
  }
  double diff,new_val;
  int iter=0;
  do
  {
    diff=0.0;
    for(int i=1;i<N;i++)
    { 
      for(int j=1;j<N;j++)
      { 
        new_val=0.25*(u[i+1][j]+u[i-1][j]+u[i][j+1]+u[i][j-1]);
        diff+=fabs(new_val-u[i][j]);
        u[i][j]=new_val;
      }
     }
     iter++;
    }
    while(diff>TOL && iter<MAX_ITER);
    printf("Solution at interior points(correct upto 6 decimal places): \n");
    for(int i=1;i<N;i++)
    {
      for(int j=1;j<N;j++)
      {
        printf("u(%0.2f,%0.2f)=%0.6f\n",i*0.25,j*0.25,u[i][j]);
      }
    }
    return 0;
  }     

/*OUTPUT:
Solution at interior points(correct upto 6 decimal places): 
u(0.25,0.25)=0.937490
u(0.25,0.50)=1.741062
u(0.25,0.75)=2.276781
u(0.50,0.25)=2.008919
u(0.50,0.50)=3.749990
u(0.50,0.75)=4.866067
u(0.75,0.25)=3.348209
u(0.75,0.50)=6.383924
u(0.75,0.75)=8.437498 */      
        //solution of Laplace equation//
#include
